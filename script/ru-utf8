#!/usr/bin/env perl

use strict;
use warnings;
use utf8;

use open qw/:std :utf8/;

use Getopt::Long qw(:config no_ignore_case);
use Pod::Usage;
use Term::ANSIColor qw/:constants/;
use List::Util qw/max/;

use Octets::To::Unicode;

my $parse_options_ok = GetOptions(
    'help|h' => \( my $help = 0 ),
    'man'    => \( my $man  = 0 ),

    'e|ext=s'       => \( my $ext = 'pm,pl,plx,t,' ),
    'n|encodings=s' =>
      \( my $encodings = $ENV{'RU-ENCODINGS'} // 'utf-8,cp1251,koi8-r' ),
    'b|in-branch' => \( my $in_branch ),
    'c|command=s' => \( my $command ),
    'o|overall'   => \( my $overall ),
);

if ( !$parse_options_ok ) {
    pod2usage(2);
}
elsif ($help) {
    pod2usage(
        -sections => "NAME|SYNOPSIS|DESCRIPTION|OPTIONS|SUBCOMMANDS",
        -verbose  => 99
    );
}
elsif ($man) {
    pod2usage( -exitval => 0, -verbose => 2 );
}
elsif ( !$command ) {
    print STDERR "use: ru-utf8 -c 'command'\n";
}
else {

    my @encodings = split /,/, $encodings;

    my @files = @ARGV;

    if ( !@files ) {
        $ext =~ s/^(.*),$/,$1/;
        $ext = join "|", map { $_ eq "" ? '' : "\\.$_" } split /,/, $ext;

        @files = grep length, split "\n",
          `git diff --name-only --diff-filter=AM origin/master...`
          if $in_branch;

        @files = map { file_find $_ }
          map { s/^\s*[\w\?]+\s+//; $_ } grep { !/^\s*D / } split /\n/,
          `git status -s`
          if !$in_branch;

        @files = grep test_script($_), grep /($ext)$/, @files;
    }

    my $max_length = max map length, @files;

    if ($overall) {

        my @tmp_files_and_encodes = map {
			my ($unicode, $encoding) = file_decode $_, \@encodings;
			(my $tmp_file = $_) =~ s!(\.[^/.]+)?$!.ru-utf8$&!n;
			file_write $tmp_file, $unicode;
			[$tmp_file, $_, $encoding]
		} @files;

		(my $duplicate_command = $command) =~ s!\$(\d+)|\$(\d+)\}!$tmp_files_and_encodes[$1 // $2][0]!ge;

		$duplicate_command =~ s!\$\*|\$\{\*\}!join " ", map $_->[0], @tmp_files_and_encodes!ge;

        my $result = system $duplicate_command;
		
		if($result) {
			unlink $_->[0] for @tmp_files_and_encodes;
		} else {
			for(@tmp_files_and_encodes) {
				my ($tmp_file, $file, $encoding) = @$_;
				file_encode $file, $encoding, file_read $tmp_file;
				unlink $tmp_file;
			}
		}
		
        exit $result;
    }

    my $result = 0;

    for my $file (@files) {

		(my $tmp_file = $file) =~ s!(\.[^/.]+)?$!.ru-utf8$&!n;
		
		(my $duplicate_command = $command) =~ s!\$[1*]|\$\{[1*]\}!$tmp_file!g;

        my ( $unicode, $encoding ) = file_decode $file, \@encodings;
        file_write $tmp_file, $unicode;
		
		print "$file  ", " " x ( $max_length - length $file ), GREEN, " in ", YELLOW,
          $encoding, RED, " â¶ ", RESET, $tmp_file, "\n";

        system $duplicate_command;

        $result = max $?, $result;
        print WHITE, "[ ", RED, "FAIL", RESET, " # $? ", WHITE, " ]", RESET,
          "\n"
          if $?;

        file_encode $file, $encoding, file_read $tmp_file if !$?;
		unlink $tmp_file;
    }

    exit $result;
}

# Ð¢ÐµÑÑ: ÐµÑÐ»Ð¸ ÑÐ°ÑÑÐ¸ÑÐµÐ½Ð¸Ðµ Ð¾ÑÑÑÑÑÑÐ²ÑÐµÑ, ÑÐ¾ 1-Ñ ÑÑÑÐ¾ÐºÐ° Ð´Ð¾Ð»Ð¶Ð½Ð° ÑÐ¾Ð´ÐµÑÐ¶Ð°ÑÑ #!
sub test_script {
    my ($file) = @_;
    return 1 if $file =~ /\.[^.\/]*$/;
    open my $f, "<", $file or die "$file: $!";
    read $f, my $buf, 2;
    close $f;
    return $buf eq "#!";
}

__END__

=encoding utf-8

=head1 NAME

B<ru-utf8> - ÑÑÐ¸Ð»Ð¸ÑÐ° Ð¿Ð¾Ð´Ð¼ÐµÐ½Ñ ÑÐ°Ð¹Ð»Ð¾Ð² Ð² Ð½Ð°ÑÐ¸Ð¾Ð½Ð°Ð»ÑÐ½ÑÑ ÐºÐ¾Ð´Ð¸ÑÐ¾Ð²ÐºÐ°Ñ Ð½Ð° ÑÐ°Ð¹Ð»Ñ Ð² utf-8.

=head1 VERSION

Version 0.01

=head1 SYNOPSIS

    ru-utf8 [-h] [--man] [<files> ...] [--ext exts] [--in-branch] --command <command>

=head1 DESCRIPTION

Ð£ÑÐ¸Ð»Ð¸ÑÐ° Ð¿ÐµÑÐµÐ²Ð¾Ð´Ð¸Ñ ÑÐ°Ð¹Ð»Ñ Ð²Ð¾ Ð²ÑÐµÐ¼ÐµÐ½Ð½ÑÐµ Ð² ÐºÐ¾Ð´Ð¸ÑÐ¾Ð²ÐºÐµ utf-8 (Ð² /tmp) Ð¸ Ð¿Ð¾ÑÐ»Ðµ Ð²ÑÐ¿Ð¾Ð»Ð½ÐµÐ½Ð¸Ñ ÐºÐ¾Ð¼Ð°Ð½Ð´Ñ Ð¸ Ð¸Ñ Ð¸Ð·Ð¼ÐµÐ½ÐµÐ½Ð¸Ñ Ð¿ÐµÑÐµÐ¿Ð¸ÑÑÐ²Ð°ÐµÑ Ð¾Ð±ÑÐ°ÑÐ½Ð¾ Ð² Ð¾Ð¿ÑÐµÐ´ÐµÐ»ÑÐ½Ð½Ð¾Ð¹ ÐºÐ¾Ð´Ð¸ÑÐ¾Ð²ÐºÐµ.

ÐÑÑÑ 3 Ð¾ÑÐ½Ð¾Ð²Ð½ÑÐµ ÑÐµÐ¶Ð¸Ð¼Ð° ÑÐ°Ð±Ð¾ÑÑ:

	# ÐÐ±ÑÐ°Ð±Ð¾ÑÐ°ÑÑ Ð²ÑÐµ Ð¸Ð·Ð¼ÐµÐ½ÑÐ½Ð½ÑÐµ, Ð½Ð¾ ÐµÑÑ Ð½Ðµ Ð·Ð°ÐºÐ¾Ð¼Ð¸ÑÐµÐ½Ð½ÑÐµ ÑÐ°Ð¹Ð»Ñ:
	$ ru-utf8 -c ''
	
	# ÐÐ±ÑÐ°Ð±Ð¾ÑÐ°ÑÑ Ð¸Ð·Ð¼ÐµÐ½ÑÐ½Ð½ÑÐµ Ð¸ Ð·Ð°ÐºÐ¾Ð¼Ð¸ÑÐµÐ½Ð½ÑÐµ ÑÐ°Ð¹Ð»Ñ Ð² Ð²ÐµÑÐºÐµ (branch-Ðµ):
	$ ru-utf8 --branch

	# ÐÐ±ÑÐ°Ð±Ð¾ÑÐ°ÑÑ ÑÐºÐ°Ð·Ð°Ð½Ð½ÑÐµ ÑÐ°Ð¹Ð»Ñ:
	$ ru-utf8 file1 /root/file2
	
Ð¡ Ð¿Ð¾Ð¼Ð¾ÑÑÑ Ð¾Ð¿ÑÐ¸Ð¸ -e (--ext) Ð¼Ð¾Ð¶Ð½Ð¾ ÑÐºÐ°Ð·Ð°ÑÑ ÑÐ°ÑÑÐ¸ÑÐµÐ½Ð¸Ñ ÑÐ°Ð¹Ð»Ð¾Ð² Ð´Ð»Ñ ÑÐ¾ÑÐ¼Ð°ÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð¸Ñ (Ð¿Ð¾ ÑÐ¼Ð¾Ð»ÑÐ°Ð½Ð¸Ñ ÑÑÐ¾ pm,pl,plx,t,):

	$ ru-utf8 -e pm,,t
	
ÐÐ±ÑÐ°ÑÐ¸ÑÐµ Ð²Ð½Ð¸Ð¼Ð°Ð½Ð¸Ðµ Ð½Ð° Ð¿ÑÑÑÐ¾Ðµ ÑÐ°ÑÑÐ¸ÑÐµÐ½Ð¸Ðµ â Ð¾Ð½Ð¾ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐµÑÑÑ Ð´Ð»Ñ Ð¸ÑÐ¿Ð¾Ð»Ð½ÑÐµÐ¼ÑÑ ÑÐºÑÐ¸Ð¿ÑÐ¾Ð² perl, ÐºÐ¾ÑÐ¾ÑÑÐµ ÑÐ°ÑÑÐ¸ÑÐµÐ½Ð¸Ñ Ð½Ðµ Ð¸Ð¼ÐµÑÑ. ÐÑÐ¸ Ð½Ð°Ð»Ð¸ÑÐ¸Ðµ ÑÐ°ÐºÐ¾Ð³Ð¾ ÑÐ°ÑÑÐ¸ÑÐµÐ½Ð¸Ñ Ð±ÑÐ´ÐµÑ Ð¿ÑÐ¾Ð²ÐµÑÑÑÑÑÑ ÑÐ°Ðº Ð¶Ðµ Ð¿ÐµÑÐ²Ð°Ñ ÑÑÑÐ¾ÐºÐ° ÑÐ°Ð¹Ð»Ð° ÑÐµÐ³ÑÐ»ÑÑÐºÐ¾Ð¹ C</^#!.*?\bperl\b/>.
	
Ð¢Ð°Ðº Ð¶Ðµ Ð¼Ð¾Ð¶Ð½Ð¾ ÑÐºÐ°Ð·Ð°ÑÑ ÐºÐ¾Ð´Ð¸ÑÐ¾Ð²ÐºÐ¸ Ð¸ Ð¿Ð¾ÑÑÐ´Ð¾Ðº Ð² ÐºÐ¾ÑÐ¾ÑÐ¾Ð¼ Ð¾Ð½Ð¸ Ð±ÑÐ´ÑÑ Ð¿ÑÐ¾Ð²ÐµÑÑÑÑÑÑ:

	$ ru-utf8 -n cp1251,utf-8

`ru-utf8` Ð²Ð¾Ð·Ð²ÑÐ°ÑÐ°ÐµÑ Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½ÑÐ¹ ÐºÐ¾Ð´ Ð¸Ð· Ð²Ð¾Ð·Ð²ÑÐ°ÑÑÐ½Ð½ÑÑ Ð¿ÑÐ¸ Ð·Ð°Ð¿ÑÑÐºÐµ ÐºÐ¾Ð¼Ð°Ð½Ð´Ñ Ð½Ð°Ð´ ÑÐ°Ð¹Ð»Ð°Ð¼Ð¸.

=head2 OPTIONS

=over 4

=item B<-h>, B<--help>

ÐÐ¾ÐºÐ°Ð·Ð°ÑÑ Ð¿Ð¾Ð¼Ð¾ÑÑ Ð¸ Ð²ÑÐ¹ÑÐ¸.

=item B<--man>

Ð Ð°ÑÐ¿ÐµÑÐ°ÑÐ°ÑÑ Ð¼Ð°Ð½ÑÐ°Ð» Ð¸ Ð·Ð°Ð²ÐµÑÑÐ¸ÑÑÑÑ.

=item B<-e> <exts>, B<--ext> <exts>

Ð¡Ð¿Ð¸ÑÐ¾Ðº ÑÐ°ÑÑÐ¸ÑÐµÐ½Ð¸Ð¹ ÑÐµÑÐµÐ· Ð·Ð°Ð¿ÑÑÑÑ.

ÐÐ¾ ÑÐ¼Ð¾Ð»ÑÐ°Ð½Ð¸Ñ: B<pm,pl,t,>.

ÐÑÑÑÐ¾Ðµ ÑÐ°ÑÑÐ¸ÑÐµÐ½Ð¸Ðµ Ð¾Ð±Ð¾Ð·Ð½Ð°ÑÐ°ÐµÑ ÑÐ°Ð¹Ð»Ñ Ð±ÐµÐ· ÑÐ°ÑÑÐ¸ÑÐµÐ½Ð¸Ð¹. 
ÐÐ´Ð½Ð°ÐºÐ¾ Ð² Ð½Ð¸Ñ Ð¿ÑÐ¾Ð²ÐµÑÑÐµÑÑÑ Ð½Ð°Ð»Ð¸ÑÐ¸Ðµ #! Ð² Ð½Ð°ÑÐ°Ð»Ðµ ÑÐ°Ð¹Ð»Ð°.

=item B<-n> encodings, B<--encodings> encodings

Ð¡Ð¿Ð¸ÑÐ¾Ðº ÐºÐ¾Ð´Ð¸ÑÐ¾Ð²Ð¾Ðº ÑÐµÑÐµÐ· Ð·Ð°Ð¿ÑÑÑÑ.

ÐÐ¾ ÑÐ¼Ð¾Ð»ÑÐ°Ð½Ð¸Ñ Ð±ÐµÑÑÑÑÑ Ð¸Ð· Ð¿ÐµÑÐµÐ¼ÐµÐ½Ð½Ð¾Ð¹ Ð¾ÐºÑÑÐ¶ÐµÐ½Ð¸Ñ B<RU-ENCODINGS>, Ð° ÐµÑÐ»Ð¸ Ð¾Ð½Ð° Ð¿ÑÑÑÐ°, ÑÐ°Ð²Ð½ÑÐµÑÑÑ: B<utf-8,cp1251,koi8-r>.

=item B<-b>, B<--in-branch>

Ð¤Ð¾ÑÐ¼Ð°ÑÐ¸ÑÐ¾Ð²Ð°ÑÑ Ð¸Ð·Ð¼ÐµÐ½ÑÐ½Ð½ÑÐµ Ð¸ Ð·Ð°ÐºÐ¾Ð¼Ð¸ÑÐµÐ½Ð½ÑÐµ ÑÐ°Ð¹Ð»Ñ Ð² Ð²ÐµÑÐºÐµ (branch-Ðµ).

=item B<-Ñ> command, B<--command> command

ÐÐ¾Ð¼Ð°Ð½Ð´Ð°. 

ÐÐ±ÑÐ·Ð°ÑÐµÐ»ÑÐ½ÑÐ¹ Ð¿Ð°ÑÐ°Ð¼ÐµÑÑ.

=item B<-o>, B<--overall>

Ð£ÐºÐ°Ð·ÑÐ²Ð°ÐµÑ, ÑÑÐ¾ ÐºÐ¾Ð¼Ð°Ð½Ð´Ð° Ð¾Ð´Ð½Ð° Ð´Ð»Ñ Ð²ÑÐµÑ ÑÐ°Ð¹Ð»Ð¾Ð², Ð° Ð½Ðµ Ð´Ð»Ñ ÐºÐ°Ð¶Ð´Ð¾Ð³Ð¾ Ð¿Ð¾ Ð¾ÑÐ´ÐµÐ»ÑÐ½Ð¾ÑÑÐ¸.

ÐÑÐ¸ ÑÑÐ¾Ð¼ Ð¾Ð±ÑÐ°ÑÐµÐ½Ð¸Ðµ Ðº ÑÐ°Ð¹Ð»Ð°Ð¼ Ð¿ÑÐ¾Ð¸ÑÑÐ¾Ð´Ð¸Ñ ÐºÐ°Ðº Ð² ÑÐµÐ»Ð»Ðµ: $1, $2...

ÐÐ°Ð¿ÑÐ¸Ð¼ÐµÑ:

	ru-utf8 file1 file2 -c 'cat $1 $2'

=back

=head2 ARGS

=over 4

=item B<files>...

Ð¤Ð°Ð¹Ð»Ñ Ð¸Ð»Ð¸ Ð´Ð¸ÑÐµÐºÑÐ¾ÑÐ¸Ð¸ Ñ ÑÐ°Ð¹Ð»Ð°Ð¼Ð¸, ÐºÐ¾ÑÐ¾ÑÑÐµ Ð½ÑÐ¶Ð½Ð¾ Ð¾ÑÑÐ¾ÑÐ¼Ð°ÑÐ¸ÑÐ¾Ð²Ð°ÑÑ.

=back

=head1 LICENSE

â B<GPLv3>

=head1 AUTHOR

Yaroslav O. Kosmina E<lt>darviarush@mail.ruE<gt>

=cut
